// Generated by CoffeeScript 1.6.3
(function() {
  var Q, r, request, _create_method;

  Q = require('q');

  r = require('request');

  request = function(uri, options) {
    var deferred, req;
    if (options == null) {
      options = {};
    }
    deferred = Q.defer();
    req = r(uri, options, function(err, res) {
      if (err) {
        return deferred.reject(err);
      } else {
        return deferred.resolve(res);
      }
    });
    return deferred.promise;
  };

  _create_method = function(uri, options, method) {
    var params;
    if (options == null) {
      options = {};
    }
    params = r.initParams(uri, options, null);
    params.options.method = method;
    return request(params.uri || null, params.options);
  };

  request.get = function(uri, options) {
    return _create_method(uri, options, 'GET');
  };

  request.post = function(uri, options) {
    return _create_method(uri, options, 'POST');
  };

  request.put = function(uri, options) {
    return _create_method(uri, options, 'PUT');
  };

  request.patch = function(uri, options) {
    return _create_method(uri, options, 'PATCH');
  };

  request.head = function(uri, options) {
    var deferred, req;
    if (options == null) {
      options = {};
    }
    deferred = Q.defer();
    req = r.head(uri, options, function(err, res) {
      if (err) {
        return deferred.reject(err);
      } else {
        return deferred.resolve(res);
      }
    });
    return deferred.promise;
  };

  request.del = function(uri, options) {
    return _create_method(uri, options, 'DELETE');
  };

  request.initParams = r.initParams;

  request.jar = r.jar;

  request.cookie = r.cookie;

  module.exports = request;

}).call(this);
